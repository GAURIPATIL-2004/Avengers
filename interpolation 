colour transition :

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class ColorTransition : MonoBehaviour
{public Color startColor = Color.red;
    public Color endColor = Color.blue;

    // Duration of the transition
    public float duration = 3.0f;

    // Private variables to track time
    private Renderer sphereRenderer;
    private float lerpTime;

    void Start()
    {
        // Get the Renderer component of the sphere
        sphereRenderer = GetComponent<Renderer>();

        // Set the initial color of the sphere
        sphereRenderer.material.color = startColor;
    }

    void Update()
    {
        // Update the lerp time by dividing the elapsed time by the duration
        lerpTime += Time.deltaTime / duration;

        // Lerp between the startColor and endColor based on the lerpTime
        Color currentColor = Color.Lerp(startColor, endColor, lerpTime);

        // Apply the current color to the sphere
        sphereRenderer.material.color = currentColor;

        // Reset lerpTime after the duration to create a looped transition
        if (lerpTime >= 1.0f)
        {
            // Swap the colors and reset lerpTime
            Color tempColor = startColor;
            startColor = endColor;
            endColor = tempColor;
            lerpTime = 0.0f;
        }
    }
}

movement:

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class SphereMovement : MonoBehaviour
{public float moveSpeed = 5.0f;

    void Update()
    {
        // Get input from the keyboard
        float moveHorizontal = Input.GetAxis("Horizontal");
        float moveVertical = Input.GetAxis("Vertical");

        // Create a movement vector
        Vector3 movement = new Vector3(moveHorizontal, 0.0f, moveVertical);

        // Apply movement to the sphere
        transform.Translate(movement * moveSpeed * Time.deltaTime, Space.World);
    }
}
